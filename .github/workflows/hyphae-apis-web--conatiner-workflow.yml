name: Hyphae APIS Web - Container Workflow

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
    paths:
      - 'hyphae-apis-web/**'

env:
  CONTAINER_REGISTRY_SERVER: ghcr.io
  CONTAINER_REGISTRY: ghcr.io/${{github.repository}}/hyphae-apis-web
  IMAGE_CONTEXT: ./hyphae-apis-web
  IMAGE_FILE: Containerfile
  IMAGE_NAME: hyphae-apis-web
  IMAGE_DESCRIPTION: "Container which runs the Hyphae Web application component in WB3Tech Microgrid"
  IMAGE_SOURCE: ${{github.server_url}}/${{github.repository}}/hyphae-apis-web

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}
          
  hyphae-apis-web:
    needs:
    - cancel-previous
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3 
 
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@d6a3abf1bdea83574e28d40543793018b6035605
      #   with:
      #     cosign-release: 'v1.7.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.CONTAINER_REGISTRY_SERVER }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.CONTAINER_REGISTRY_SERVER }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.CONTAINER_REGISTRY }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=sha-,format=long

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ${{ env.IMAGE_CONTEXT }}
          file: ${{ env.IMAGE_CONTEXT }}/${{ env.IMAGE_FILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{env.IMAGE_NAME}}
            org.opencontainers.image.description=${{env.IMAGE_DESCRIPTION}}
            org.opencontainers.image.url=${{env.CONTAINER_REGISTRY}}
            org.opencontainers.image.source=${{env.IMAGE_SOURCE}}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }} 
            org.opencontainers.image.created=${{ steps.prep.outputs.created }} 
            org.opencontainers.image.revision=${{ github.sha }}

      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     COSIGN_EXPERIMENTAL: "true"
      #   run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
